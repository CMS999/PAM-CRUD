{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\cauam\\\\OneDrive\\\\Documentos\\\\ETEC\\\\PAM-CRUD\\\\Telas\\\\CRUD.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport firebase from \"../database/firebaseDb\";\n\nvar CRUD = function (_Component) {\n  _inherits(CRUD, _Component);\n\n  var _super = _createSuper(CRUD);\n\n  function CRUD() {\n    var _this;\n\n    _classCallCheck(this, CRUD);\n\n    _this = _super.call(this);\n\n    _this.inputValueUpdate = function (val, prop) {\n      var state = _this.state;\n      state[prop] = val;\n\n      _this.setState(state);\n    };\n\n    _this.API = function _callee() {\n      var URL, id, ChaveAPI;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              URL = 'https://viacep.com.br/ws/';\n              id = _this.state.cep;\n              ChaveAPI = '/json/';\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(fetch(URL + id + ChaveAPI).then(function (response) {\n                return response.json();\n              }).then(function (result) {\n                _this.setState({\n                  Apicep: result\n                });\n              }).catch(function (error) {\n                return console.error(error);\n              }));\n\n            case 5:\n              _this.setDados();\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.Cadastrar = function _callee2() {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(_this.API());\n\n            case 2:\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(_this.setDados());\n\n            case 4:\n              _this.setState({\n                isLoading: true\n              });\n\n              _this.bdREF.doc(_this.state.Email).set({\n                Email: _this.state.Email,\n                Nome: _this.state.Nome,\n                CPF: _this.state.CPF,\n                Senha: _this.state.Senha,\n                CEP: _this.state.cep,\n                Logradouro: _this.state.logradouro,\n                Complemento: _this.state.complemento,\n                Bairro: _this.state.bairro,\n                Localidade: _this.state.localidade,\n                UF: _this.state.uf,\n                IBGE: _this.state.ibge,\n                Gia: _this.state.gia,\n                DDD: _this.state.ddd,\n                Siafi: _this.state.siafi\n              }).then(function (res) {\n                _this.setState({\n                  Email: '',\n                  Nome: '',\n                  CPF: '',\n                  Senha: '',\n                  cep: '',\n                  logradouro: '',\n                  complemento: '',\n                  bairro: '',\n                  localidade: '',\n                  uf: '',\n                  ibge: '',\n                  gia: '',\n                  ddd: '',\n                  siafi: '',\n                  isLoading: false\n                });\n              });\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.bdREF = firebase.firestore().collection('usuarios');\n    _this.state = {\n      Email: '',\n      Nome: '',\n      CPF: '',\n      Senha: '',\n      CEP: '',\n      logradouro: '',\n      complemento: '',\n      bairro: '',\n      localidade: '',\n      uf: '',\n      ibge: '',\n      gia: '',\n      ddd: '',\n      siafi: '',\n      isLoading: false\n    };\n    return _this;\n  }\n\n  _createClass(CRUD, [{\n    key: \"setDados\",\n    value: function setDados() {\n      var Apicep = this.state.Apicep;\n      this.inputValueUpdate(Apicep.cep, 'cep');\n      this.inputValueUpdate(Apicep.logradouro, 'logradouro');\n      this.inputValueUpdate(Apicep.complemento, 'complemento');\n      this.inputValueUpdate(Apicep.bairro, 'bairro');\n      this.inputValueUpdate(Apicep.localidade, 'localidade');\n      this.inputValueUpdate(Apicep.uf, 'uf');\n      this.inputValueUpdate(Apicep.ibge, 'ibge');\n      this.inputValueUpdate(Apicep.gia, 'gia');\n      this.inputValueUpdate(Apicep.ddd, 'ddd');\n      this.inputValueUpdate(Apicep.siafi, 'siafi');\n      this.setState({\n        isLoading: true\n      });\n    }\n  }, {\n    key: \"Atualizar\",\n    value: function Atualizar() {\n      var _this2 = this;\n\n      this.setState({\n        isLoading: true\n      });\n      this.bdREF.doc(this.state.Email).set({\n        Email: this.state.Email,\n        Nome: this.state.Nome,\n        CPF: this.state.CPF,\n        Senha: this.state.Senha,\n        CEP: this.state.cep\n      }).then(function (res) {\n        _this2.setState({\n          Email: '',\n          Nome: '',\n          CPF: '',\n          Senha: '',\n          CEP: '',\n          isLoading: false\n        });\n      });\n    }\n  }, {\n    key: \"Deletar\",\n    value: function Deletar() {\n      var bdREF = firebase.firestore().collection('usuarios').doc(this.state.Email);\n      bdREF.delete();\n    }\n  }, {\n    key: \"Pesquisar\",\n    value: function Pesquisar() {\n      var doc;\n      return _regeneratorRuntime.async(function Pesquisar$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(firebase.firestore().collection('usuarios').doc(this.state.Email).get());\n\n            case 2:\n              doc = _context3.sent;\n              this.setState({\n                Email: doc.data().Email,\n                Nome: doc.data().Nome,\n                CPF: doc.data().CPF,\n                Senha: doc.data().Senha,\n                CEP: doc.data().CEP\n              });\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.isLoading) {\n        return React.createElement(View, {\n          style: styles.preloader,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 9\n          }\n        }, React.createElement(ActivityIndicator, {\n          size: \"large\",\n          color: \"#9E9E9E\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 11\n          }\n        }));\n      }\n\n      return React.createElement(ScrollView, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.inputGroup,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInput, {\n        placeholder: 'Email',\n        value: this.state.Email,\n        onChangeText: function onChangeText(val) {\n          return _this3.inputValueUpdate(val, 'Email');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }\n      })), React.createElement(View, {\n        style: styles.inputGroup,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInput, {\n        placeholder: 'Nome',\n        value: this.state.Nome,\n        onChangeText: function onChangeText(val) {\n          return _this3.inputValueUpdate(val, 'Nome');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }\n      })), React.createElement(View, {\n        style: styles.inputGroup,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInput, {\n        placeholder: 'CPF',\n        value: this.state.CPF,\n        onChangeText: function onChangeText(val) {\n          return _this3.inputValueUpdate(val, 'CPF');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }\n      })), React.createElement(View, {\n        style: styles.inputGroup,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInput, {\n        placeholder: 'Senha',\n        value: this.state.Senha,\n        onChangeText: function onChangeText(val) {\n          return _this3.inputValueUpdate(val, 'Senha');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }\n      })), React.createElement(View, {\n        style: styles.inputGroup,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInput, {\n        placeholder: 'CEP',\n        value: this.state.CEP,\n        onChangeText: function onChangeText(val) {\n          return _this3.inputValueUpdate(val, 'cep');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }\n      })), React.createElement(View, {\n        style: styles.containerbutton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.button1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }\n      }, React.createElement(Button, {\n        title: \"Cadastrar\",\n        onPress: function onPress() {\n          return _this3.Cadastrar();\n        },\n        color: \"#19AC52\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 15\n        }\n      })), React.createElement(View, {\n        style: styles.button1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }\n      }, React.createElement(Button, {\n        title: \"Deletar\",\n        onPress: function onPress() {\n          return _this3.Deletar();\n        },\n        color: \"#19AC52\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 15\n        }\n      })), React.createElement(View, {\n        style: styles.button1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }\n      }, React.createElement(Button, {\n        title: \"Atualizar\",\n        onPress: function onPress() {\n          return _this3.Atualizar();\n        },\n        color: \"#19AC52\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 15\n        }\n      })), React.createElement(View, {\n        style: styles.button1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }\n      }, React.createElement(Button, {\n        title: \"Pesquisar\",\n        onPress: function onPress() {\n          return _this3.Pesquisar();\n        },\n        color: \"#19AC52\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 15\n        }\n      }))));\n    }\n  }]);\n\n  return CRUD;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 35\n  },\n  button1: {\n    paddingBottom: 15\n  },\n  containerbutton: {\n    flex: 1,\n    padding: 35,\n    marginBottom: 15\n  },\n  inputGroup: {\n    flex: 1,\n    padding: 0,\n    marginBottom: 15,\n    borderBottomWidth: 1,\n    borderBottomColor: '#cccccc'\n  },\n  preloader: {\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    position: 'absolute',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport default CRUD;","map":{"version":3,"sources":["C:/Users/cauam/OneDrive/Documentos/ETEC/PAM-CRUD/Telas/CRUD.js"],"names":["React","Component","firebase","CRUD","inputValueUpdate","val","prop","state","setState","API","URL","id","cep","ChaveAPI","fetch","then","response","json","result","Apicep","catch","error","console","setDados","Cadastrar","isLoading","bdREF","doc","Email","set","Nome","CPF","Senha","CEP","Logradouro","logradouro","Complemento","complemento","Bairro","bairro","Localidade","localidade","UF","uf","IBGE","ibge","Gia","gia","DDD","ddd","Siafi","siafi","res","firestore","collection","delete","get","data","styles","preloader","container","inputGroup","containerbutton","button1","Deletar","Atualizar","Pesquisar","StyleSheet","create","flex","padding","paddingBottom","marginBottom","borderBottomWidth","borderBottomColor","left","right","top","bottom","position","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, StyleSheet, TextInput, ScrollView, ActivityIndicator, View } from 'react-native';\r\nimport firebase from '../database/firebaseDb';\r\n\r\nclass CRUD extends Component {\r\n  \r\n  inputValueUpdate = (val, prop) => {\r\n    const state = this.state;\r\n    state[prop] = val;\r\n    this.setState(state);\r\n  }\r\n  constructor() {\r\n    \r\n    super();\r\n    this.bdREF = firebase.firestore().collection('usuarios');\r\n    this.state = {\r\n      Email: '',\r\n      Nome: '',\r\n      CPF: '',\r\n      Senha: '',\r\n      CEP:'',\r\n      logradouro:'',\r\n      complemento:'',\r\n      bairro:'',\r\n      localidade:'',\r\n      uf:'',\r\n      ibge:'',\r\n      gia:'',\r\n      ddd:'',\r\n      siafi:'',\r\n      isLoading: false\r\n    };\r\n  }  \r\n  \r\n  /* async Teste(){\r\n    const nera = await firebase.firestore().collection('usuarios').get();    \r\n    console.log(nera.docs.map(doc => doc.data()));\r\n  } */\r\n  API= async() => {\r\n    var URL = 'https://viacep.com.br/ws/';\r\n    var id = this.state.cep;\r\n    var ChaveAPI = '/json/';\r\n    await fetch(URL + id + ChaveAPI)\r\n    .then(response => response.json())\r\n    .then(result => {\r\n      this.setState({Apicep: result})       \r\n    })\r\n    .catch((error) => console.error(error))    \r\n    this.setDados();\r\n    \r\n  }    \r\n  setDados(){\r\n    const { Apicep } = this.state;  \r\n    this.inputValueUpdate(Apicep.cep, 'cep');\r\n    this.inputValueUpdate(Apicep.logradouro, 'logradouro');\r\n    this.inputValueUpdate(Apicep.complemento, 'complemento');\r\n    this.inputValueUpdate(Apicep.bairro, 'bairro');\r\n    this.inputValueUpdate(Apicep.localidade, 'localidade');\r\n    this.inputValueUpdate(Apicep.uf, 'uf');\r\n    this.inputValueUpdate(Apicep.ibge, 'ibge');\r\n    this.inputValueUpdate(Apicep.gia, 'gia');\r\n    this.inputValueUpdate(Apicep.ddd, 'ddd');\r\n    this.inputValueUpdate(Apicep.siafi, 'siafi');  \r\n    this.setState({isLoading: true}); \r\n  }\r\n  Cadastrar = async() => { \r\n    await this.API()\r\n    await this.setDados() \r\n    this.setState({isLoading: true});      \r\n      this.bdREF.doc(this.state.Email).set({\r\n        Email: this.state.Email,\r\n        Nome: this.state.Nome,\r\n        CPF: this.state.CPF,\r\n        Senha: this.state.Senha,\r\n        CEP: this.state.cep,\r\n        Logradouro: this.state.logradouro,\r\n        Complemento: this.state.complemento,\r\n        Bairro: this.state.bairro,\r\n        Localidade: this.state.localidade,\r\n        UF: this.state.uf,\r\n        IBGE: this.state.ibge,\r\n        Gia: this.state.gia,\r\n        DDD: this.state.ddd,\r\n        Siafi: this.state.siafi,\r\n      }).then((res) => {\r\n        this.setState({\r\n          Email: '',\r\n          Nome: '',\r\n          CPF: '',\r\n          Senha: '',\r\n          cep:'',\r\n          logradouro:'',\r\n          complemento:'',\r\n          bairro:'',\r\n          localidade:'',\r\n          uf:'',\r\n          ibge:'',\r\n          gia:'',\r\n          ddd:'',\r\n          siafi:'',\r\n          isLoading: false,\r\n        });\r\n      });    \r\n  }\r\n\r\n  Atualizar() {\r\n    this.setState({isLoading: true});      \r\n      this.bdREF.doc(this.state.Email).set({\r\n        Email: this.state.Email,\r\n        Nome: this.state.Nome,\r\n        CPF: this.state.CPF,\r\n        Senha: this.state.Senha,\r\n        CEP: this.state.cep,\r\n      }).then((res) => {\r\n        this.setState({\r\n          Email: '',\r\n          Nome: '',\r\n          CPF: '',\r\n          Senha: '',\r\n          CEP:'',\r\n          isLoading: false,\r\n        });\r\n      });\r\n  }\r\n  \r\n  Deletar() {\r\n    const bdREF = firebase.firestore().collection('usuarios').doc(this.state.Email)\r\n      bdREF.delete()\r\n  }\r\n  \r\n  \r\n  async Pesquisar() {\r\n    const doc = await firebase.firestore().collection('usuarios').doc(this.state.Email).get()\r\n    this.setState({\r\n      Email: doc.data().Email,\r\n      Nome: doc.data().Nome,\r\n      CPF: doc.data().CPF,\r\n      Senha: doc.data().Senha,\r\n      CEP: doc.data().CEP,\r\n    })\r\n  }\r\n\r\n  render() {    \r\n    if(this.state.isLoading)\r\n    {\r\n      return(\r\n        <View style={styles.preloader}>\r\n          <ActivityIndicator size=\"large\" color=\"#9E9E9E\"/>\r\n        </View>\r\n      )\r\n    }\r\n    return (\r\n      <ScrollView style={styles.container}>\r\n        <View style={styles.inputGroup}>\r\n          <TextInput\r\n              placeholder={'Email'}\r\n              value={this.state.Email}\r\n              onChangeText={(val) => this.inputValueUpdate(val, 'Email')}\r\n          />\r\n        </View>\r\n        <View style={styles.inputGroup}>\r\n          <TextInput\r\n              placeholder={'Nome'}\r\n              value={this.state.Nome}\r\n              onChangeText={(val) => this.inputValueUpdate(val, 'Nome')}\r\n          />\r\n        </View>\r\n        <View style={styles.inputGroup}>\r\n          <TextInput\r\n              placeholder={'CPF'}\r\n              value={this.state.CPF}\r\n              onChangeText={(val) => this.inputValueUpdate(val, 'CPF')}\r\n          />\r\n        </View>\r\n        <View style={styles.inputGroup}>\r\n          <TextInput\r\n              placeholder={'Senha'}\r\n              value={this.state.Senha}\r\n              onChangeText={(val) => this.inputValueUpdate(val, 'Senha')}\r\n          />\r\n        </View>\r\n        <View style={styles.inputGroup}>\r\n          <TextInput\r\n              placeholder={'CEP'}\r\n              value={this.state.CEP}\r\n              onChangeText={(val) => this.inputValueUpdate(val, 'cep')}\r\n          />\r\n        </View>\r\n        <View style={styles.containerbutton}>\r\n            <View style={styles.button1}>\r\n              <Button            \r\n                title='Cadastrar'\r\n                onPress={() => this.Cadastrar()} \r\n                color=\"#19AC52\"\r\n              />\r\n            </View>\r\n            <View style={styles.button1}>\r\n              <Button\r\n                title='Deletar'\r\n                onPress={() => this.Deletar()} \r\n                color=\"#19AC52\"\r\n              />\r\n            </View>            \r\n            <View style={styles.button1}>\r\n              <Button\r\n                title='Atualizar'\r\n                onPress={() => this.Atualizar()} \r\n                color=\"#19AC52\"\r\n              />\r\n            </View>            \r\n            <View style={styles.button1}>\r\n              <Button\r\n                title='Pesquisar'\r\n                onPress={() => this.Pesquisar()} \r\n                color=\"#19AC52\"\r\n              />\r\n            </View>  \r\n        </View>\r\n      </ScrollView>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 35\r\n  },\r\n  button1:{\r\n    paddingBottom:15\r\n  },\r\n  containerbutton: {\r\n    flex: 1,\r\n    padding: 35,\r\n    marginBottom:15\r\n  },\r\n  inputGroup: {\r\n    flex: 1,\r\n    padding: 0,\r\n    marginBottom: 15,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#cccccc',\r\n  },\r\n  preloader: {\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    position: 'absolute',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  }\r\n})\r\n\r\nexport default CRUD;"]},"metadata":{},"sourceType":"module"}