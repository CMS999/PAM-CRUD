{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\cauam\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\PAM-CRUD\\\\screens\\\\UserScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { ListItem } from 'react-native-elements';\nimport { color } from 'react-native-elements/dist/helpers';\nimport firebase from \"../database/firebaseDb\";\n\nvar UserScreen = function (_Component) {\n  _inherits(UserScreen, _Component);\n\n  var _super = _createSuper(UserScreen);\n\n  function UserScreen() {\n    var _this;\n\n    _classCallCheck(this, UserScreen);\n\n    _this = _super.call(this);\n\n    _this.getCollection = function (querySnapshot) {\n      var userArr = [];\n      querySnapshot.forEach(function (res) {\n        var _res$data = res.data(),\n            name = _res$data.name,\n            email = _res$data.email,\n            mobile = _res$data.mobile;\n\n        userArr.push({\n          name: name,\n          email: email,\n          mobile: mobile\n        });\n      });\n\n      _this.setState({\n        userArr: userArr,\n        isLoading: false\n      });\n    };\n\n    _this.firestoreRef = firebase.firestore().collection('users');\n    _this.state = {\n      isLoading: true,\n      userArr: []\n    };\n    return _this;\n  }\n\n  _createClass(UserScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.unsubscribe = this.firestoreRef.onSnapshot(this.getCollection);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unsubscribe();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.isLoading) {\n        return React.createElement(View, {\n          style: styles.preloader,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 9\n          }\n        }, React.createElement(ActivityIndicator, {\n          size: \"large\",\n          color: \"#9E9E9E\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 11\n          }\n        }));\n      }\n\n      return React.createElement(ScrollView, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 7\n        }\n      }, this.state.userArr.map(function (item, i) {\n        return React.createElement(ListItem, {\n          key: i,\n          title: item.name,\n          chevron: true,\n          bottomDivider: true,\n          onPress: function onPress() {\n            _this2.props.navigation.navigate('UserDetailScreen', {\n              userkey: item.key\n            });\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }\n        });\n      }));\n    }\n  }]);\n\n  return UserScreen;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingBottom: 22\n  },\n  preloader: {\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    position: 'absolute',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport default UserScreen;","map":{"version":3,"sources":["C:/Users/cauam/OneDrive/Área de Trabalho/PAM-CRUD/screens/UserScreen.js"],"names":["React","Component","ListItem","color","firebase","UserScreen","getCollection","querySnapshot","userArr","forEach","res","data","name","email","mobile","push","setState","isLoading","firestoreRef","firestore","collection","state","unsubscribe","onSnapshot","styles","preloader","container","map","item","i","props","navigation","navigate","userkey","key","StyleSheet","create","flex","paddingBottom","left","right","top","bottom","position","alignItems","justifyContent"],"mappings":"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","sourcesContent":["// screens/UserScreen.js\r\n\r\nimport React, { Component } from 'react';\r\nimport { StyleSheet, ScrollView, ActivityIndicator, View } from 'react-native';\r\nimport { ListItem } from 'react-native-elements'\r\nimport { color } from 'react-native-elements/dist/helpers';\r\nimport firebase from '../database/firebaseDb';\r\n\r\nclass UserScreen extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.firestoreRef = firebase.firestore().collection('users');\r\n    this.state = {\r\n      isLoading: true,\r\n      userArr: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.unsubscribe = this.firestoreRef.onSnapshot(this.getCollection);\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    this.unsubscribe();\r\n  }\r\n\r\n  getCollection = (querySnapshot) => {\r\n    const userArr = [];\r\n    querySnapshot.forEach((res) => {\r\n      const { name, email, mobile } = res.data();\r\n      userArr.push({\r\n        name,\r\n        email,\r\n        mobile,\r\n      });\r\n    });\r\n    this.setState({\r\n      userArr,\r\n      isLoading: false,\r\n   });\r\n  }\r\n\r\n  render() {\r\n    if(this.state.isLoading){\r\n      return(\r\n        <View style={styles.preloader}>\r\n          <ActivityIndicator size=\"large\" color=\"#9E9E9E\"/>\r\n        </View>\r\n      )\r\n    }    \r\n    return (\r\n      <ScrollView style={styles.container}>\r\n          {\r\n            this.state.userArr.map((item, i) => {\r\n              return (\r\n                <ListItem\r\n                  key={i}\r\n                  title={item.name}\r\n                  chevron\r\n                  bottomDivider                   \r\n                  onPress={() => {\r\n                    this.props.navigation.navigate('UserDetailScreen', {\r\n                      userkey: item.key\r\n                    });\r\n                  }}/>\r\n              );\r\n            })\r\n          }\r\n      </ScrollView>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n   flex: 1,\r\n   paddingBottom: 22   \r\n  },\r\n  preloader: {\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    position: 'absolute',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  }\r\n})\r\n\r\nexport default UserScreen;"]},"metadata":{},"sourceType":"module"}